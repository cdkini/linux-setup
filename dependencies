#!/usr/bin/env bash
# This file is responsible for downloading all dependencies necessary to run my set-up of Bash and Neovim in Ubuntu.

# Both apt-get and snap require root privledges
check_su() {
    if [[ $(id -u) != "0" ]]; then
        printf "%s\n\n" "You must be the superuser to run this script (try 'sudo -s')"
        exit -1
    fi
}

install_git() {
    if ! command -v git; then
        apt-get install git
    fi
}

install_curl() {
    if ! command -v curl; then
        apt-get install curl 
    fi
}

install_node() {
    if ! command -v node; then
        snap install node --classic --channel=edge # Installs both node and npm
    fi
}

install_rg() {
    if ! command -v rg; then
        snap install ripgrep --classic 
    fi
}

install_bat() {
    if ! command -v batcat; then
        snap install batcat # Aliased to 'bat' in .bashrc
    fi
}

install_fd() {
    if ! command -v fdfind; then
        apt-get install fd-find # Aliased to 'fd' in .bashrc
    fi
}

install_fzf() {
    if ! command -v fzf; then
        apt-get install fzf
    fi
}

install_nvim() {
    if ! command -v nvim; then
        apt-get install neovim
    fi
}

install_vimplug() {
    sh -c "curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
}

install_dependencies() {
    apt-get update
    printf "%s\n\n" "Updated 'apt-get' to most recent version"

    printf "%s\n\n" "Downloading dependencies..."
    declare -a dependencies=(
        install_git
        install_curl
        install_node
        install_rg
        install_bat
        install_fd
        install_fzf
        install_nvim
        install_vimplug
    )

    failure=false
    for cmd in "${dependencies[@]}"; do
        $cmd
        if [[ $? -eq 0 ]]; then
            printf "%s\n\n" "Successfully ran '$cmd'"
        else
            printf "%s\n\n" "Failed to run '$cmd'"
            failure=true
        fi
    done

    if [[ $failure = true ]]; then
        printf "\n%s\n" "ERROR: One or more dependencies was not installed properly"
    else
        printf "\n%s\n" "SUCCESS: All dependencies were installed successfully"
    fi
}

main() {
    printf "%s\n" "dependencies - $(date)"
    printf "%s\n" "============================================================"
    check_su
    install_dependencies
    printf "%s\n" "============================================================"
}

main "$@" 2>&1 | tee -a log.txt # Logs both STDOUT and STDERR
